% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{ConcreteDropout}
\alias{ConcreteDropout}
\title{R6 Class Representing a Person}
\description{
constant dropout
}
\details{
Key dropout layer for network with uncertainty estimation
}
\section{Super class}{
\code{\link[keras:KerasWrapper]{keras::KerasWrapper}} -> \code{ConcreteDropout}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{weight_regularizer}}{scalar}

\item{\code{dropout_regularizer}}{scalar}

\item{\code{init_min}}{scalar}

\item{\code{init_max}}{scalar}

\item{\code{is_mc_dropout}}{bool}

\item{\code{supports_masking}}{bool}

\item{\code{p_logit}}{field}

\item{\code{p}}{field}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ConcreteDropout$new()}}
\item \href{#method-build}{\code{ConcreteDropout$build()}}
\item \href{#method-concrete_dropout}{\code{ConcreteDropout$concrete_dropout()}}
\item \href{#method-call}{\code{ConcreteDropout$call()}}
\item \href{#method-clone}{\code{ConcreteDropout$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasWrapper" data-id=".set_py_wrapper">}\href{../../keras/html/KerasWrapper.html#method-.set_py_wrapper}{\code{keras::KerasWrapper$.set_py_wrapper()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasWrapper" data-id="add_loss">}\href{../../keras/html/KerasWrapper.html#method-add_loss}{\code{keras::KerasWrapper$add_loss()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasWrapper" data-id="add_weight">}\href{../../keras/html/KerasWrapper.html#method-add_weight}{\code{keras::KerasWrapper$add_weight()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasWrapper" data-id="compute_output_shape">}\href{../../keras/html/KerasWrapper.html#method-compute_output_shape}{\code{keras::KerasWrapper$compute_output_shape()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="keras" data-topic="KerasWrapper" data-id="python_wrapper">}\href{../../keras/html/KerasWrapper.html#method-python_wrapper}{\code{keras::KerasWrapper$python_wrapper()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new dropout layer
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConcreteDropout$new(
  weight_regularizer,
  dropout_regularizer,
  init_min,
  init_max,
  is_mc_dropout
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{weight_regularizer}}{weight_regularizer}

\item{\code{dropout_regularizer}}{dropout_regularizer}

\item{\code{init_min}}{init_min}

\item{\code{init_max}}{init_max}

\item{\code{is_mc_dropout}}{is_mc_dropout}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{

}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-build"></a>}}
\if{latex}{\out{\hypertarget{method-build}{}}}
\subsection{Method \code{build()}}{
Build a new dropout layer
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConcreteDropout$build(input_shape)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_shape}}{input_shape}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{

}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-concrete_dropout"></a>}}
\if{latex}{\out{\hypertarget{method-concrete_dropout}{}}}
\subsection{Method \code{concrete_dropout()}}{
Perform dropout
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConcreteDropout$concrete_dropout(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{input tensor}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
output tensor
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-call"></a>}}
\if{latex}{\out{\hypertarget{method-call}{}}}
\subsection{Method \code{call()}}{
Call object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConcreteDropout$call(x, mask = NULL, training = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{input tensor}

\item{\code{mask}}{mask}

\item{\code{training}}{bool}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{

}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConcreteDropout$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
